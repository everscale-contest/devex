server {
  listen 80; # IPv4
  server_name test-metatag-nph.mydomain.com;
  #return 301 https://$host$request_uri;
  limit_conn arbeit 32;
  ## Access and error logs.
  access_log /var/log/supervisor/nginx-access.log;
  error_log /var/log/supervisor/nginx-error.log;
  ## See the blacklist.conf file at the parent dir: /etc/nginx.
  ## Deny access based on the User-Agent header.
  if ($bad_bot) {
      return 444;
  }
  ## Deny access based on the Referer header.
  if ($bad_referer) {
      return 444;
  }
  location / {
    #auth_basic           "closed site";
    #auth_basic_user_file /etc/nginx/.htpasswd;
    proxy_pass http://172.17.0.1:3003;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }
}

server {
  listen 443 ssl; # IPv4 spdy
  server_name test-metatag-nph.mydomain.com;
  limit_conn arbeit 32;

  add_header Strict-Transport-Security max-age=31536000;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  ssl_certificate /etc/nginx/ssl/cert.pem;
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
  ## Access and error logs.
  access_log /var/log/supervisor/nginx-access.log;
  error_log /var/log/supervisor/nginx-error.log;
  ## See the blacklist.conf file at the parent dir: /etc/nginx.
  ## Deny access based on the User-Agent header.
  if ($bad_bot) {
      return 444;
  }
  ## Deny access based on the Referer header.
  if ($bad_referer) {
      return 444;
  }
  location / {
    #auth_basic           "closed site";
    #auth_basic_user_file /etc/nginx/.htpasswd;
    proxy_pass http://172.17.0.1:3003;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }
}